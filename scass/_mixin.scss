@mixin clearfix() {
	&::after {
		display: block;
		content: "";
		clear: both;
	}
}

.pull-left {
  float: left !important;
}
.pull-right {
  float: right !important;
}

@mixin rounded($par: 0px) {
	-webkit-border-radius: $par;
	-moz-border-radius: $par;
	border-radius: $par;
}


@mixin boxShadow($par: 0px) {
	box-shadow: $par;
	-moz-box-shadow: $par;
	-webkit-box-shadow: $par;
}

@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}

@mixin rotate($par) {
	transform: rotate($par);
	-webkit-transform: rotate($par); 
	-moz-transform: rotate($par);
	-o-transform: rotate($par);
}

@mixin skewX($par) {
	transform: skewX($par);
	-webkit-transform: skewX($par);
	-ms-transform: skewX($par);
	-o-transform: skewX($par);
	-moz-transform: skewX($par);
}

@mixin scale($par) {
	transform: scale($par);
	-webkit-transform: scale($par); 
	-moz-transform: scale($par);
	-o-transform: scale($par);
}

@mixin gradient($from, $to) {
	background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background: -moz-linear-gradient(top, $from, $to);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

@mixin fog($from, $to) {
	background: -moz-linear-gradient(left, $from 0%, $to 100%);
	background: -webkit-linear-gradient(left, $from 0%, $to 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$from}', endColorstr='#{$to}',GradientType=1);
}

@mixin grayscale($par: 1) {
	-webkit-filter: grayscale($par);
	filter: grayscale($par);
}